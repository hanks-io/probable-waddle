import { VConsoleOptions } from 'core/options.interface';
import { Plugin } from 'vite';

interface viteVConsoleOptions {
    entry: string[] | string;
    localEnabled?: boolean;
    enabled?: boolean;
    config?: VConsoleOptions;
    customHide?: string;
    plugin?: viteVConsolePluginItemOptions[];
    dynamicConfig?: viteVConsoleDynamicConfigOptions;
    eventListener?: string;
}
interface viteVConsoleDynamicConfigOptions {
    theme?: string;
    target?: string;
    defaultPlugins?: string;
    disableLogScrolling?: boolean;
    pluginOrder?: string;
    log?: string;
    network?: string;
    storage?: string;
    [key: string]: any;
}
interface viteVConsolePluginItemOptions {
    id: string;
    name: string;
    event: {
        eventName: string;
        callback: (data?: any) => void;
    }[];
}

declare function viteVConsole(opt: viteVConsoleOptions): Plugin;

export { viteVConsole as default, viteVConsole, type viteVConsoleDynamicConfigOptions, type viteVConsoleOptions, type viteVConsolePluginItemOptions };
